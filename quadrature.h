#pragma once
// I'm only using one quadrature rule for now, one that's all-around good (15th order,
// positive weights), and with not too many points.
#include <array>
#include "position.h"

constexpr Position constpos(double x, double y, double z) {
  Position result;
  result.x = x;
  result.y = y;
  result.z = z;
  return result;
}

template<unsigned N>
struct Quadrature
{
  static constexpr unsigned Npts = N;
  static constexpr std::array<Position, N> points = constpos(0, 0, 0);
  static constexpr std::array<double, N> weights = 0;
};

struct RabinowitzRichter6 : Quadrature<48>
{
 static constexpr std::array<Position, Npts> points = {constpos(0.995769, 0.500000, 0.0),
    constpos(0.901008, 0.500000, 0.0),
    constpos(0.782434, 0.500000, 0.0),
    constpos(0.004231, 0.500000, 0.0),
    constpos(0.098992, 0.500000, 0.0),
    constpos(0.217566, 0.500000, 0.0),
    constpos(0.500000, 0.995769, 0.0),
    constpos(0.500000, 0.901008, 0.0),
    constpos(0.500000, 0.782434, 0.0),
    constpos(0.500000, 0.004231, 0.0),
    constpos(0.500000, 0.098992, 0.0),
    constpos(0.500000, 0.217566, 0.0),
    constpos(0.967720, 0.967720, 0.0),
    constpos(0.881228, 0.881228, 0.0),
    constpos(0.607808, 0.607808, 0.0),
    constpos(0.967720, 0.032280, 0.0),
    constpos(0.881228, 0.118772, 0.0),
    constpos(0.607808, 0.392192, 0.0),
    constpos(0.032280, 0.967720, 0.0),
    constpos(0.118772, 0.881228, 0.0),
    constpos(0.392192, 0.607808, 0.0),
    constpos(0.032280, 0.032280, 0.0),
    constpos(0.118772, 0.118772, 0.0),
    constpos(0.392192, 0.392192, 0.0),
    constpos(0.988483, 0.834224, 0.0),
    constpos(0.946856, 0.686760, 0.0),
    constpos(0.806124, 0.703949, 0.0),
    constpos(0.011517, 0.834224, 0.0),
    constpos(0.053144, 0.686760, 0.0),
    constpos(0.193876, 0.703949, 0.0),
    constpos(0.988483, 0.165776, 0.0),
    constpos(0.946856, 0.313240, 0.0),
    constpos(0.806124, 0.296051, 0.0),
    constpos(0.011517, 0.165776, 0.0),
    constpos(0.053144, 0.313240, 0.0),
    constpos(0.193876, 0.296051, 0.0),
    constpos(0.834224, 0.988483, 0.0),
    constpos(0.686760, 0.946856, 0.0),
    constpos(0.703949, 0.806124, 0.0),
    constpos(0.165776, 0.988483, 0.0),
    constpos(0.313240, 0.946856, 0.0),
    constpos(0.296051, 0.806124, 0.0),
    constpos(0.834224, 0.011517, 0.0),
    constpos(0.686760, 0.053144, 0.0),
    constpos(0.703949, 0.193876, 0.0),
    constpos(0.165776, 0.011517, 0.0),
    constpos(0.313240, 0.053144, 0.0),
    constpos(0.296051, 0.193876, 0.0),};
 static constexpr std::array<double, Npts> weights = {0.00753113019953025,
    0.0217786710052273,
    0.03125200735878735,
    0.00753113019953025,
    0.0217786710052273,
    0.03125200735878735,
    0.00753113019953025,
    0.0217786710052273,
    0.03125200735878735,
    0.00753113019953025,
    0.0217786710052273,
    0.03125200735878735,
    0.00669128519654165,
    0.023991296590610924,
    0.04377082495858438,
    0.00669128519654165,
    0.023991296590610924,
    0.04377082495858438,
    0.00669128519654165,
    0.023991296590610924,
    0.04377082495858438,
    0.00669128519654165,
    0.023991296590610924,
    0.04377082495858438,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999,
    0.00707840930083185,
    0.021660367900627326,
    0.0287536151438999};
};


struct Sommariva16 : Quadrature<52>
{
  static constexpr std::array<Position, Npts> points = {constpos(0.992492, 0.083423, 0.0),
    constpos(0.993633, 0.929422, 0.0),
    constpos(0.989671, 0.674411, 0.0),
    constpos(0.985537, 0.401186, 0.0),
    constpos(0.977183, 0.189257, 0.0),
    constpos(0.948358, 0.817862, 0.0),
    constpos(0.928039, 0.546501, 0.0),
    constpos(0.917630, 0.272685, 0.0),
    constpos(0.962135, 0.018762, 0.0),
    constpos(0.945732, 0.985249, 0.0),
    constpos(0.861275, 0.917631, 0.0),
    constpos(0.836260, 0.699034, 0.0),
    constpos(0.818555, 0.400004, 0.0),
    constpos(0.890446, 0.093275, 0.0),
    constpos(0.816853, 0.014001, 0.0),
    constpos(0.764553, 0.983969, 0.0),
    constpos(0.712248, 0.823980, 0.0),
    constpos(0.688656, 0.551043, 0.0),
    constpos(0.759632, 0.190602, 0.0),
    constpos(0.682116, 0.056838, 0.0),
    constpos(0.527809, 0.991249, 0.0),
    constpos(0.615767, 0.933350, 0.0),
    constpos(0.539607, 0.699186, 0.0),
    constpos(0.603028, 0.320685, 0.0),
    constpos(0.529844, 0.131116, 0.0),
    constpos(0.546729, 0.007153, 0.0),
    constpos(0.384541, 0.951912, 0.0),
    constpos(0.457549, 0.855181, 0.0),
    constpos(0.442180, 0.470844, 0.0),
    constpos(0.376500, 0.227402, 0.0),
    constpos(0.379622, 0.044500, 0.0),
    constpos(0.225807, 0.006170, 0.0),
    constpos(0.274788, 0.991188, 0.0),
    constpos(0.306696, 0.811362, 0.0),
    constpos(0.308490, 0.637930, 0.0),
    constpos(0.247378, 0.351725, 0.0),
    constpos(0.223276, 0.109898, 0.0),
    constpos(0.094069, 0.035216, 0.0),
    constpos(0.194455, 0.920830, 0.0),
    constpos(0.140957, 0.763756, 0.0),
    constpos(0.164141, 0.525955, 0.0),
    constpos(0.115597, 0.211718, 0.0),
    constpos(0.093891, 0.983371, 0.0),
    constpos(0.049940, 0.883006, 0.0),
    constpos(0.053604, 0.640067, 0.0),
    constpos(0.068734, 0.384759, 0.0),
    constpos(0.027781, 0.105655, 0.0),
    constpos(0.009281, 0.969305, 0.0),
    constpos(0.006585, 0.768831, 0.0),
    constpos(0.010872, 0.496185, 0.0),
    constpos(0.013264, 0.261251, 0.0),
    constpos(0.008377, 0.008181, 0.0),};
  static constexpr std::array<double, Npts> weights = {0.00287124460045309,
    0.00368298742300059,
    0.00774611009421574,
    0.009847687850746337,
    0.007954970453652678,
    0.016886817407916258,
    0.024515520255663455,
    0.020017891500765748,
    0.004432590515078675,
    0.004915326069970758,
    0.018448602324697735,
    0.0336911370834851,
    0.03557781041554085,
    0.01771355468217133,
    0.007313198295226977,
    0.008907329214696554,
    0.03275358751023385,
    0.0466923783285686,
    0.03323239069521885,
    0.018942428741482737,
    0.006147308794018038,
    0.019640271355726886,
    0.0455498523245764,
    0.04694607918868565,
    0.029873594952328074,
    0.006709665150543925,
    0.014260733312433627,
    0.02521036844060215,
    0.05163227381996612,
    0.037153817999551524,
    0.01842362206394937,
    0.005131574513337872,
    0.00545607975352865,
    0.024924816163611425,
    0.04051649402411633,
    0.03788328174001525,
    0.024794196390577214,
    0.01023198978087829,
    0.019204379842353597,
    0.026969305383547526,
    0.031873836541221875,
    0.024175162251482273,
    0.006268546724537305,
    0.013344801620153736,
    0.01841391915077728,
    0.019941055070481155,
    0.009202482687863184,
    0.0026048311937180075,
    0.005408636762365055,
    0.007316301432536028,
    0.007316983147062415,
    0.0013301749606678703};
};

